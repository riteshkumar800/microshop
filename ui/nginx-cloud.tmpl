server {
  # Render sets PORT; do NOT use default syntax like ${PORT:-80}
  listen 80;
  server_name _;

  # Serve the SPA
  root /usr/share/nginx/html;
  index index.html;
  location / { try_files $uri /index.html; }

  # === Common proxy bits ===
  # Render backends are HTTPS and require SNI
  proxy_ssl_server_name on;
  proxy_http_version 1.1;
  proxy_set_header Connection "";
  proxy_set_header X-Forwarded-Proto $scheme;
  proxy_set_header X-Forwarded-Host  $host;
  proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;

  # IMPORTANT: do NOT override Host with $host when proxying to Render.
  # Let Nginx use the host from proxy_pass so routing works.

  # === Products ===
location /api/products/ { proxy_pass ${PRODUCT_ORIGIN}/products/; }
location = /api/products { proxy_pass ${PRODUCT_ORIGIN}/products; }
# (optional) make /api/products/healthz hit the service root /healthz
location = /api/products/healthz { proxy_pass ${PRODUCT_ORIGIN}/healthz; }

# === Auth (user-service at ROOT, not /auth) ===
location /api/auth/ { proxy_pass ${USER_ORIGIN}/; }
location = /api/auth { proxy_pass ${USER_ORIGIN}/; }
# (optional) convenience health
location = /api/auth/healthz { proxy_pass ${USER_ORIGIN}/healthz; }

# === Orders ===
location /api/orders/ { proxy_pass ${ORDER_ORIGIN}/orders/; }
location = /api/orders { proxy_pass ${ORDER_ORIGIN}/orders; }
# (optional)
location = /api/orders/healthz { proxy_pass ${ORDER_ORIGIN}/healthz; }

# === Payments ===
location /api/pay/ { proxy_pass ${PAYMENT_ORIGIN}/pay/; }
location = /api/pay { proxy_pass ${PAYMENT_ORIGIN}/pay; }
# (optional)
location = /api/pay/healthz { proxy_pass ${PAYMENT_ORIGIN}/healthz; }
};